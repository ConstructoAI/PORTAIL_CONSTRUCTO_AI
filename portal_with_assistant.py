# portal_with_assistant.py - Portail Constructo AI avec Assistant IA int√©gr√©
import streamlit as st
import time
from datetime import datetime
import json
import os

# Configuration de la page
st.set_page_config(
    page_title="Portail Constructo AI - Centre de Solutions IA",
    page_icon="üèóÔ∏è",
    layout="wide",
    initial_sidebar_state="collapsed"
)

# Classe Assistant IA avec profil Sylvain Leduc
class AssistantIA:
    """Assistant IA Sylvain Leduc pour support client Constructo AI"""
    
    def __init__(self):
        self.max_exchanges = 10  # Maximum pour √©conomiser l'API
        self.exchange_count = 0
        self.profile = "Sylvain Leduc - Cr√©ateur de Constructo AI"
    
    def get_response(self, user_message: str) -> str:
        """G√©n√®re une r√©ponse en tant que Sylvain Leduc"""
        user_msg_lower = user_message.lower()
        
        # V√©rifier le compteur d'√©changes
        self.exchange_count += 1
        if self.exchange_count > self.max_exchanges:
            return ("üéØ **Nous avons bien couvert Constructo AI!**\n\n"
                   "Pour une d√©monstration personnalis√©e ou plus de d√©tails:\n"
                   "üìû Appelez-moi au 514-820-1972\n"
                   "üìß info@constructoai.ca\n\n"
                   "√Ä bient√¥t pour transformer votre entreprise! - Sylvain Leduc")
        
        # D√©tecter les questions hors-sujet et rediriger
        offtopic_keywords = ["m√©t√©o", "sport", "politique", "cuisine", "voyage", "film", "musique", "jeu"]
        if any(word in user_msg_lower for word in offtopic_keywords):
            return ("üí° **Je comprends votre question, mais en tant que cr√©ateur de Constructo AI,** "
                   "je me sp√©cialise exclusivement dans nos 8 applications pour la construction.\n\n"
                   "Revenons √† comment Constructo AI peut transformer votre entreprise! "
                   "Quelle application vous int√©resse le plus?")
        
        # R√©ponses sp√©cifiques aux applications
        if "experts" in user_msg_lower or "expert" in user_msg_lower:
            return ("üèóÔ∏è **J'ai d√©velopp√© EXPERTS AI avec 54 profils d'experts!**\n\n"
                   "‚Ä¢ Tous les m√©tiers: architecte, ing√©nieur, √©lectricien, plombier\n"
                   "‚Ä¢ Donn√©es actualis√©es 2025 avec prix Qu√©bec\n"
                   "‚Ä¢ Estimations de 250$ √† 487$/pi¬≤ selon complexit√©\n"
                   "‚Ä¢ Support 27 formats de fichiers\n"
                   "‚Ä¢ Recherche web contextuelle int√©gr√©e\n\n"
                   "C'est notre application phare! Voulez-vous une d√©monstration?")
        
        elif "takeoff" in user_msg_lower:
            return ("üìê **TAKEOFF AI - Mon syst√®me de mesure r√©volutionnaire!**\n\n"
                   "‚Ä¢ 5 outils de mesure sophistiqu√©s sur PDF\n"
                   "‚Ä¢ Mode orthogonal 8 directions pour pr√©cision maximale\n"
                   "‚Ä¢ Catalogue produits avec prix Qu√©bec 2025\n"
                   "‚Ä¢ Calibration dynamique pixel/unit√© r√©elle\n"
                   "‚Ä¢ 17 viewers PDF optimis√©s diff√©rents\n\n"
                   "Nos clients √©conomisent 20h/semaine sur les estimations!")
        
        elif "erp" in user_msg_lower:
            return ("üè≠ **ERP AI - J'ai con√ßu 120 postes de travail pr√©configur√©s!**\n\n"
                   "‚Ä¢ Soudage, CNC, assemblage, et plus\n"
                   "‚Ä¢ TimeTracker temps r√©el avec synchronisation\n"
                   "‚Ä¢ 25+ phases de construction d√©taill√©es\n"
                   "‚Ä¢ Workflow BROUILLON ‚Üí VALID√â ‚Üí EN COURS ‚Üí TERMIN√â\n"
                   "‚Ä¢ Conformit√© normes CSA/BNQ int√©gr√©e\n\n"
                   "Solution compl√®te pour l'industrie 4.0!")
        
        elif "b2b" in user_msg_lower:
            return ("ü§ù **B2B CONSTRUCTION - Ma marketplace professionnelle!**\n\n"
                   "‚Ä¢ Workflow d'approbation sophistiqu√© en 5 √©tapes\n"
                   "‚Ä¢ Validation RBQ automatique et instantan√©e\n"
                   "‚Ä¢ Syst√®me de notation multi-crit√®res pond√©r√©\n"
                   "‚Ä¢ 15 tables de base de donn√©es optimis√©es\n"
                   "‚Ä¢ S√©curit√© renforc√©e avec bcrypt et audit trail\n\n"
                   "350+ entreprises RBQ actives l'utilisent d√©j√†!")
        
        elif "seaop" in user_msg_lower or "appel" in user_msg_lower and "offre" in user_msg_lower:
            return ("üìä **SEAOP - Syst√®me d'appels d'offres publics!**\n\n"
                   "‚Ä¢ Calcul automatique d'urgence (üü¢üü°üü†üî¥)\n"
                   "‚Ä¢ Chat communautaire style Facebook avec likes\n"
                   "‚Ä¢ Conformit√© Loi sur les architectes du Qu√©bec\n"
                   "‚Ä¢ Tarification automatique services professionnels\n"
                   "‚Ä¢ Badges utilisateurs (Premium, RBQ V√©rifi√©)\n\n"
                   "Parfait pour les projets publics qu√©b√©cois!")
        
        elif "c2b" in user_msg_lower:
            return ("üè¢ **C2B PORTAIL - Solution mono-entreprise!**\n\n"
                   "‚Ä¢ Portail personnalis√© aux couleurs de l'entreprise\n"
                   "‚Ä¢ Configuration simple pour PME\n"
                   "‚Ä¢ Gestion centralis√©e des demandes clients\n"
                   "‚Ä¢ Interface √©pur√©e et intuitive\n"
                   "‚Ä¢ D√©ploiement rapide sans configuration complexe\n\n"
                   "Id√©al pour les entrepreneurs individuels!")
        
        elif "prix" in user_msg_lower or "co√ªt" in user_msg_lower or "tarif" in user_msg_lower:
            return ("üí∞ **ROI moyen en moins de 30 jours!**\n\n"
                   "‚Ä¢ √âconomies moyennes: 20h/semaine (1,000$/semaine)\n"
                   "‚Ä¢ Productivit√©: +30-45% d√®s le premier mois\n"
                   "‚Ä¢ 3.5M$ √©conomis√©s collectivement par nos utilisateurs\n"
                   "‚Ä¢ Garantie satisfaction 30 jours\n\n"
                   "L'investissement se rembourse en moins d'une semaine! "
                   "Contactez-moi pour un calcul de ROI personnalis√©: 514-820-1972")
        
        elif "s√©cur" in user_msg_lower or "donn√©e" in user_msg_lower:
            return ("üîí **S√©curit√© de niveau bancaire!**\n\n"
                   "‚Ä¢ Chiffrement SSL/TLS pour toutes les donn√©es\n"
                   "‚Ä¢ Conformit√© Loi 25 (protection renseignements personnels)\n"
                   "‚Ä¢ Sauvegardes automatiques quotidiennes\n"
                   "‚Ä¢ H√©bergement s√©curis√© Render.com\n"
                   "‚Ä¢ Vos donn√©es vous appartiennent √† 100%\n\n"
                   "J'ai con√ßu le syst√®me avec la s√©curit√© comme priorit√©!")
        
        elif "formation" in user_msg_lower or "support" in user_msg_lower or "aide" in user_msg_lower:
            return ("üéì **Formation et support inclus!**\n\n"
                   "‚Ä¢ Formation personnalis√©e gratuite (valeur 2,500$)\n"
                   "‚Ä¢ Assistant IA disponible 24/7\n"
                   "‚Ä¢ Op√©rationnel en moyenne en 2 heures\n"
                   "‚Ä¢ Support email prioritaire (plans Pro)\n"
                   "‚Ä¢ Documentation compl√®te en fran√ßais\n\n"
                   "Je m'assure personnellement que vous r√©ussissiez!")
        
        elif "concurrent" in user_msg_lower or "compar" in user_msg_lower:
            return ("üèÜ **Constructo AI se distingue par:**\n\n"
                   "‚Ä¢ 54 experts IA vs 0-5 chez les concurrents\n"
                   "‚Ä¢ Prix 2025 Qu√©bec actualis√©s vs donn√©es g√©n√©riques\n"
                   "‚Ä¢ 8 applications int√©gr√©es vs solutions fragment√©es\n"
                   "‚Ä¢ Conformit√© RBQ/CCQ native vs adaptations\n"
                   "‚Ä¢ Moins cher que 2-3 logiciels s√©par√©s\n\n"
                   "Quelle fonctionnalit√© recherchez-vous pr√©cis√©ment?")
        
        elif "contact" in user_msg_lower or "appel" in user_msg_lower or "d√©mo" in user_msg_lower:
            return ("üìû **Contactez-moi directement!**\n\n"
                   "**Sylvain Leduc** - Cr√©ateur de Constructo AI\n"
                   "üì± 514-820-1972\n"
                   "üìß info@constructoai.ca\n"
                   "üåê www.constructoai.ca\n"
                   "üìç Farnham, Qu√©bec\n\n"
                   "D√©monstration personnalis√©e gratuite disponible!")
        
        elif "sylvain" in user_msg_lower or "vous" in user_msg_lower and any(word in user_msg_lower for word in ["qui", "parlez", "pr√©sent"]):
            return ("üë®‚Äçüíº **Je suis Sylvain Leduc, cr√©ateur de Constructo AI!**\n\n"
                   "Passionn√© par l'innovation dans la construction, j'ai d√©velopp√© personnellement "
                   "cet √©cosyst√®me complet de 8 applications pour transformer l'industrie qu√©b√©coise.\n\n"
                   "**Mon expertise:**\n"
                   "‚Ä¢ Concepteur de solutions IA pour la construction\n"
                   "‚Ä¢ Expert en technologies Streamlit et Claude API\n"
                   "‚Ä¢ Sp√©cialiste des normes RBQ/CCQ qu√©b√©coises\n\n"
                   "**Ma mission:** Permettre aux entreprises de construction d'√©conomiser "
                   "20h/semaine et d'augmenter leur productivit√© de 30-45%!\n\n"
                   "Quelle solution puis-je vous pr√©senter?")
        
        elif any(word in user_msg_lower for word in ["bonjour", "salut", "hello", "allo"]):
            return self.get_greeting()
        
        elif any(word in user_msg_lower for word in ["merci", "parfait", "super", "excellent", "bye", "aurevoir", "√† bient√¥t"]):
            return ("üòä **Parfait! Ce fut un plaisir!**\n\n"
                   "Si vous avez d'autres questions sur Constructo AI, je suis l√†.\n"
                   "Pour une d√©monstration personnalis√©e: 514-820-1972\n\n"
                   "Bonne journ√©e et au plaisir de vous accompagner dans votre "
                   "transformation num√©rique! üèóÔ∏è\n\n- Sylvain Leduc")
        
        # Questions techniques construction -> rediriger vers EXPERTS AI
        construction_keywords = ["b√©ton", "fondation", "structure", "√©lectri", "plomb", "toiture", "isolation", "code", "norme"]
        if any(word in user_msg_lower for word in construction_keywords):
            return ("üîß **Excellente question technique!**\n\n"
                   f"Notre module EXPERTS AI a justement un expert qui peut vous aider avec √ßa. "
                   f"Avec 54 profils sp√©cialis√©s, vous aurez une r√©ponse d√©taill√©e et conforme aux normes qu√©b√©coises.\n\n"
                   f"Voulez-vous en savoir plus sur EXPERTS AI?")
        
        # R√©ponse par d√©faut
        else:
            return ("üí° **Je suis Sylvain Leduc, cr√©ateur de Constructo AI!**\n\n"
                   "J'ai d√©velopp√© 8 applications pour r√©volutionner la construction:\n\n"
                   "‚Ä¢ **EXPERTS AI** - 54 experts IA sp√©cialis√©s\n"
                   "‚Ä¢ **TAKEOFF AI** - Mesure et estimation sur PDF\n"
                   "‚Ä¢ **ERP AI** - 120 postes de travail configur√©s\n"
                   "‚Ä¢ **B2B** - Marketplace avec validation RBQ\n"
                   "‚Ä¢ **SEAOP** - Appels d'offres publics\n"
                   "‚Ä¢ **C2B** - Portail mono-entreprise\n"
                   "‚Ä¢ **FEUILLE SOUMISSION** - G√©n√©rateur de devis\n"
                   "‚Ä¢ **PORTAIL** - Hub central unifi√©\n\n"
                   "Quelle solution vous int√©resse pour votre entreprise?")
    
    def get_greeting(self) -> str:
        """Message d'accueil de Sylvain Leduc"""
        return ("üèóÔ∏è **Bonjour! Je suis Sylvain Leduc, cr√©ateur de Constructo AI!**\n\n"
                "J'ai d√©velopp√© personnellement cet √©cosyst√®me de 8 applications "
                "pour r√©volutionner l'industrie de la construction qu√©b√©coise.\n\n"
                "**Comment puis-je vous aider aujourd'hui?**\n"
                "‚Ä¢ üìä D√©couvrir EXPERTS AI (54 experts IA)\n"
                "‚Ä¢ üìê Explorer TAKEOFF AI (mesure PDF)\n"
                "‚Ä¢ üè≠ Comprendre ERP AI (gestion compl√®te)\n"
                "‚Ä¢ üí∞ Calculer votre ROI personnalis√©\n"
                "‚Ä¢ üìû Planifier une d√©monstration\n\n"
                "Quelle application vous int√©resse le plus?")

# Initialisation de l'assistant
if 'assistant' not in st.session_state:
    st.session_state.assistant = AssistantIA()
    st.session_state.chat_messages = []
    st.session_state.chat_expanded = False

# Fonction pour charger le CSS local
def load_css(file_name):
    """Charge les styles CSS depuis un fichier local."""
    try:
        if os.path.exists(file_name):
            with open(file_name, "r", encoding="utf-8") as f:
                st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)
        else:
            print(f"Warning: CSS file {file_name} not found")
    except Exception as e:
        print(f"Error loading CSS: {e}")

# Chargement du CSS
load_css("style_portal.css")

# CSS suppl√©mentaire pour l'assistant dans le footer
st.markdown("""
<style>
    /* Assistant Chat Button */
    .chat-button {
        position: fixed;
        bottom: 20px;
        right: 20px;
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, #3B82F6 0%, #1E40AF 100%);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 4px 12px rgba(59, 130, 246, 0.4);
        z-index: 1000;
        transition: all 0.3s ease;
    }
    
    .chat-button:hover {
        transform: scale(1.1);
        box-shadow: 0 6px 20px rgba(59, 130, 246, 0.6);
    }
    
    .chat-button-icon {
        font-size: 28px;
        filter: brightness(0) invert(1);
    }
    
    /* Chat Container dans le footer */
    .footer-chat-container {
        background: linear-gradient(135deg, #F0F9FF 0%, #E0F2FE 100%);
        border-top: 3px solid #3B82F6;
        border-radius: 20px 20px 0 0;
        padding: 30px;
        margin-top: 50px;
        box-shadow: 0 -10px 30px rgba(0, 0, 0, 0.1);
    }
    
    .chat-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 20px;
        padding-bottom: 15px;
        border-bottom: 2px solid #E0F2FE;
    }
    
    .chat-title {
        font-size: 24px;
        font-weight: 700;
        color: #1E40AF;
        display: flex;
        align-items: center;
        gap: 10px;
    }
    
    .chat-status {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #10B981;
        font-weight: 500;
    }
    
    .status-dot {
        width: 10px;
        height: 10px;
        background: #10B981;
        border-radius: 50%;
        animation: pulse 2s infinite;
    }
    
    @keyframes pulse {
        0% { opacity: 1; }
        50% { opacity: 0.5; }
        100% { opacity: 1; }
    }
    
    /* Messages */
    .chat-message {
        margin: 15px 0;
        animation: slideIn 0.3s ease;
    }
    
    @keyframes slideIn {
        from { opacity: 0; transform: translateY(10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    
    .user-message {
        background: white;
        border-left: 4px solid #3B82F6;
        padding: 12px 16px;
        border-radius: 8px;
        margin-left: 20%;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    .assistant-message {
        background: linear-gradient(135deg, #FFFFFF 0%, #F0F9FF 100%);
        border-left: 4px solid #10B981;
        padding: 12px 16px;
        border-radius: 8px;
        margin-right: 20%;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }
    
    /* Quick Actions */
    .quick-actions {
        display: flex;
        gap: 10px;
        flex-wrap: wrap;
        margin: 20px 0;
    }
    
    .quick-action-btn {
        background: white;
        border: 2px solid #E0F2FE;
        padding: 8px 16px;
        border-radius: 20px;
        color: #3B82F6;
        font-weight: 500;
        transition: all 0.3s;
        cursor: pointer;
    }
    
    .quick-action-btn:hover {
        background: #3B82F6;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
    }
    
    /* Responsive */
    @media (max-width: 768px) {
        .footer-chat-container {
            padding: 20px 15px;
        }
        
        .user-message, .assistant-message {
            margin-left: 0;
            margin-right: 0;
        }
        
        .chat-title {
            font-size: 20px;
        }
    }
</style>
""", unsafe_allow_html=True)

# CSS Responsive pour mobile (existant)
st.markdown("""
<style>
    /* Responsive Design pour Mobile */
    @media (max-width: 768px) {{
        /* Ajustement des colonnes pour mobile */
        .stColumns > div {{
            flex: 0 0 100% !important;
            max-width: 100% !important;
        }}
        
        /* Header responsive */
        .header-container {{
            padding: 20px 10px !important;
        }}
        
        /* Cartes en pleine largeur sur mobile */
        [data-testid="column"] {{
            width: 100% !important;
            flex: 1 0 100% !important;
        }}
        
        /* Texte adaptatif */
        h1, h2, h3 {{
            word-wrap: break-word !important;
        }}
        
        /* Boutons et inputs responsive */
        .stTextInput > div > div > input {{
            font-size: 16px !important;
        }}
        
        .stSelectbox > div > div {{
            font-size: 16px !important;
        }}
    }}
    
    @media (max-width: 480px) {{
        /* Encore plus petit pour tr√®s petits √©crans */
        .main-title {{
            font-size: 1.8rem !important;
        }}
        
        /* Padding r√©duit */
        .block-container {{
            padding: 1rem !important;
        }}
    }}
</style>
""", unsafe_allow_html=True)

# Donn√©es des applications (existantes)
APPLICATIONS = [
    {
        "id": "experts-ai",
        "name": "EXPERTS IA",
        "icon": "üèóÔ∏è",
        "url": "https://experts-ai.constructoai.ca/",
        "description": "Assistant IA avec 60+ experts sp√©cialis√©s en construction au Qu√©bec",
        "features": ["60+ profils d'experts", "Analyse documents", "Recherche web int√©gr√©e", "Export professionnel"],
        "status": "production",
        "category": "expertise",
        "color": "#3B82F6",
        "gradient": "linear-gradient(135deg, #3B82F6 0%, #1E40AF 100%)",
        "badge": "‚≠ê FLAGSHIP"
    },
    {
        "id": "takeoff-ai",
        "name": "TAKEOFF AI",
        "icon": "üìê",
        "url": "https://takeoff-ai.constructoai.ca/",
        "description": "Syst√®me d'estimation de construction avec IA Claude - Visualisation PDF et mesures avanc√©es",
        "features": ["Visualisation PDF avec annotations", "5 modes de mesure", "Assistant IA Claude int√©gr√©", "Export CSV/JSON/PDF"],
        "status": "production",
        "category": "estimation",
        "color": "#10B981",
        "gradient": "linear-gradient(135deg, #10B981 0%, #059669 100%)",
        "badge": "üöÄ POPULAIRE"
    },
    {
        "id": "erp-ai",
        "name": "ERP AI",
        "icon": "üè≠",
        "url": "https://erp-ai.constructoai.ca/",
        "description": "Solution ERP compl√®te de gestion industrielle avec 120 postes de travail et TimeTracker int√©gr√©",
        "features": ["120 postes de travail configur√©s", "TimeTracker temps r√©el", "CRM et RH int√©gr√©s", "Multi-vues: Dashboard, Kanban, Gantt"],
        "status": "production",
        "category": "gestion",
        "color": "#8B5CF6",
        "gradient": "linear-gradient(135deg, #8B5CF6 0%, #7C3AED 100%)",
        "badge": "üè≠ INDUSTRIE 4.0"
    },
    {
        "id": "seaop",
        "name": "SEAOP",
        "icon": "üìä",
        "url": "https://seaop.constructoai.ca/",
        "description": "Syst√®me √âlectronique d'Appel d'Offres Public - Plateforme de mise en relation clients-entrepreneurs",
        "features": ["Appels d'offres publics", "Chat temps r√©el", "√âvaluations 5 √©toiles", "Dashboard analytics"],
        "status": "production",
        "category": "appels-offres",
        "color": "#06B6D4",
        "gradient": "linear-gradient(135deg, #06B6D4 0%, #0891B2 100%)",
        "badge": "üèÜ APPELS D'OFFRES"
    },
    {
        "id": "b2b-pbr8",
        "name": "B2B",
        "icon": "üèóÔ∏è",
        "url": "https://b2b.constructoai.ca/",
        "description": "Plateforme B2B de gestion des soumissions avec workflow d'approbation intelligent pour entreprises RBQ",
        "features": ["Workflow d'approbation 5 √©tapes", "√âvaluation multi-crit√®res", "Validation RBQ automatique", "Dashboard analytique B2B"],
        "status": "production",
        "category": "collaboration",
        "color": "#F59E0B",
        "gradient": "linear-gradient(135deg, #F59E0B 0%, #D97706 100%)",
        "badge": "üèóÔ∏è B2B CONSTRUCTION"
    },
    {
        "id": "c2b-cs4p",
        "name": "C2B",
        "icon": "üè¢",
        "url": "https://c2b.constructoai.ca/",
        "description": "Portail Client √† Entreprise - Solution mono-entreprise pour recevoir et g√©rer les demandes de soumissions",
        "features": ["R√©ception demandes clients", "Soumissions personnalis√©es", "Suivi temps r√©el", "Dashboard propri√©taire"],
        "status": "production",
        "category": "portail-entreprise",
        "color": "#EC4899",
        "gradient": "linear-gradient(135deg, #EC4899 0%, #DB2777 100%)",
        "badge": "üè¢ PORTAIL C2B"
    },
    {
        "id": "feuille-soumission",
        "name": "Feuille de Soumission",
        "icon": "üìã",
        "url": "https://constructoai.github.io/FEUILLE_SOUMISSION/",
        "description": "G√©n√©rateur de soumissions professionnelles pour projets de construction",
        "features": ["Templates personnalis√©s", "Calculs automatiques", "Export PDF", "Suivi soumissions"],
        "status": "production",
        "category": "documentation",
        "color": "#14B8A6",
        "gradient": "linear-gradient(135deg, #14B8A6 0%, #0D9488 100%)",
        "badge": "üìÑ DOCUMENTS"
    }
]

# Statistiques globales
STATS = {
    "users": "2,500+",
    "projects": "15,000+",
    "companies": "350+",
    "savings": "3.5M$"
}

# Initialisation session state
if 'selected_category' not in st.session_state:
    st.session_state.selected_category = "all"
if 'search_query' not in st.session_state:
    st.session_state.search_query = ""

# Header principal avec animation
st.markdown("""
    <div class="header-container">
        <div class="header-glow"></div>
        <div class="header-content">
            <style>
                .title-wrapper {{
                    display: flex;
                    align-items: baseline;
                    justify-content: center;
                    gap: 10px;
                }}
                @media (max-width: 768px) {{
                    .title-container {{ flex-direction: column !important; gap: 10px !important; }}
                    .title-line {{ display: none !important; }}
                    .title-wrapper {{ 
                        flex-direction: column !important; 
                        gap: 0 !important;
                        align-items: center !important;
                        text-align: center !important;
                    }}
                    .title-wrapper h1:first-child {{ 
                        font-size: 2.2rem !important; 
                        letter-spacing: 3px !important; 
                        margin-bottom: -5px !important;
                    }}
                    .title-wrapper h1:last-child {{ 
                        font-size: 2.2rem !important; 
                        letter-spacing: 3px !important; 
                    }}
                    .main-subtitle {{ font-size: 1.1rem !important; margin-top: 0.5rem !important; }}
                    .main-description {{ font-size: 0.9rem !important; padding: 0 15px !important; line-height: 1.5 !important; }}
                    .header-stats {{ flex-wrap: wrap !important; gap: 15px !important; padding: 0 10px !important; }}
                    .stat-item {{ flex: 0 0 45% !important; padding: 0.8rem !important; }}
                }}
                @media (max-width: 480px) {{
                    .title-wrapper {{ 
                        flex-direction: column !important; 
                        gap: 0 !important;
                        align-items: center !important;
                    }}
                    .title-wrapper h1:first-child {{ 
                        font-size: 1.8rem !important; 
                        letter-spacing: 2px !important;
                        margin-bottom: -5px !important;
                    }}
                    .title-wrapper h1:last-child {{ 
                        font-size: 1.8rem !important; 
                        letter-spacing: 2px !important; 
                    }}
                    .main-subtitle {{ font-size: 1rem !important; }}
                    .main-description {{ font-size: 0.85rem !important; }}
                    .stat-item {{ flex: 0 0 100% !important; }}
            </style>
            <div class="title-container" style="display: flex; align-items: center; justify-content: center; gap: 15px; margin-bottom: 2rem;">
                <div class="title-line" style="width: 60px; height: 2px; background: linear-gradient(to right, transparent, rgba(255,255,255,0.8));"></div>
                <div class="title-wrapper">
                    <h1 style="
                        font-size: 3.5rem; 
                        font-weight: 500; 
                        color: white; 
                        margin: 0;
                        letter-spacing: 8px; 
                        text-transform: uppercase;
                        font-family: 'Helvetica Neue', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                        text-shadow: 0 2px 10px rgba(0,0,0,0.2);
                    ">CONSTRUCTO</h1>
                    <h1 style="
                        font-size: 3.5rem; 
                        font-weight: 700; 
                        color: #000000; 
                        margin: 0;
                        letter-spacing: 8px; 
                        text-transform: uppercase;
                        font-family: 'Helvetica Neue', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
                    ">AI</h1>
                </div>
                <div class="title-line" style="width: 60px; height: 2px; background: linear-gradient(to left, transparent, rgba(255,255,255,0.8));"></div>
            </div>
            <p class="main-subtitle" style="font-size: 1.5rem; font-weight: 500; margin-bottom: 1rem;">Vos Assistant AI pour la construction</p>
            <p class="main-description" style="color: rgba(255, 255, 255, 0.9); font-size: 1.1rem; max-width: 800px; margin: 0 auto;">Estimez et v√©rifiez vos projets 4x plus rapidement. Constructo AI est la plateforme intelligente qui r√©volutionne vos projets de construction.</p>
            <div class="header-stats">
                <div class="stat-item">
                    <span class="stat-value">{users}</span>
                    <span class="stat-label">Utilisateurs</span>
                </div>
                <div class="stat-item">
                    <span class="stat-value">{projects}</span>
                    <span class="stat-label">Projets</span>
                </div>
                <div class="stat-item">
                    <span class="stat-value">{companies}</span>
                    <span class="stat-label">Entreprises</span>
                </div>
                <div class="stat-item">
                    <span class="stat-value">{savings}</span>
                    <span class="stat-label">√âconomies</span>
                </div>
            </div>
        </div>
    </div>
""".format(**STATS), unsafe_allow_html=True)

# Barre de recherche et filtres
col1, col2, col3 = st.columns([2, 1, 1])

with col1:
    search = st.text_input(
        "üîç Rechercher une application", 
        placeholder="Ex: estimation, experts, gestion...",
        key="search_input",
        label_visibility="collapsed"
    )
    st.session_state.search_query = search.lower()

with col2:
    categories = ["Toutes"] + list(set([app["category"] for app in APPLICATIONS]))
    category_labels = {
        "all": "üéØ Toutes",
        "expertise": "üèóÔ∏è Expertise",
        "estimation": "üìê Estimation",
        "gestion": "üíº Gestion",
        "appels-offres": "üìä Appels d'Offres",
        "collaboration": "ü§ù Collaboration",
        "portail-entreprise": "üè¢ Portail Entreprise",
        "documentation": "üìÑ Documentation"
    }
    
    selected_cat = st.selectbox(
        "Cat√©gorie",
        categories,
        format_func=lambda x: category_labels.get(x.lower(), x),
        label_visibility="collapsed"
    )
    
    if selected_cat == "Toutes":
        st.session_state.selected_category = "all"
    else:
        st.session_state.selected_category = selected_cat.lower()

with col3:
    view_mode = st.radio(
        "Vue",
        ["Cartes", "Liste"],
        horizontal=True,
        label_visibility="collapsed"
    )

# Filtrage des applications
filtered_apps = APPLICATIONS.copy()

# Filtre par recherche
if st.session_state.search_query:
    filtered_apps = [
        app for app in filtered_apps
        if st.session_state.search_query in app["name"].lower() or
           st.session_state.search_query in app["description"].lower() or
           any(st.session_state.search_query in feature.lower() for feature in app["features"])
    ]

# Filtre par cat√©gorie
if st.session_state.selected_category != "all":
    filtered_apps = [
        app for app in filtered_apps
        if app["category"] == st.session_state.selected_category
    ]

# Section d'acc√®s rapide
st.markdown("""
    <div class="quick-access-container">
        <h2 class="section-title">‚ö° Acc√®s Rapide</h2>
        <p class="section-subtitle">Cliquez sur une application pour y acc√©der directement</p>
    </div>
""", unsafe_allow_html=True)

# Affichage des applications
if view_mode == "Cartes":
    # Vue en cartes (grille)
    cols = st.columns(3)
    for idx, app in enumerate(filtered_apps):
        with cols[idx % 3]:
            # Utilisation de st.container pour √©viter les conflits CSS
            with st.container():
                st.markdown(f"""
                    <div style="background: white; border: 1px solid #ddd; border-radius: 10px; padding: 20px; margin-bottom: 20px;">
                        <div style="text-align: center; font-size: 40px; margin-bottom: 10px;">
                            {app['icon']}
                        </div>
                        <h3 style="color: #1a1a1a; font-size: 18px; margin: 10px 0; text-align: center; font-weight: bold;">
                            {app['name']}
                        </h3>
                        <p style="color: #666; font-size: 14px; line-height: 1.4; margin: 10px 0; text-align: center;">
                            {app['description'][:100]}...
                        </p>
                        <div style="margin: 15px 0; text-align: center;">
                            <span style="background: #f0f0f0; padding: 4px 8px; border-radius: 4px; font-size: 12px; color: #333; margin: 0 2px;">
                                {app['features'][0]}
                            </span>
                        </div>
                        <div style="text-align: center; margin-top: 15px;">
                            <a href="{app['url']}" target="_blank" style="
                                background: #007bff; 
                                color: white; 
                                padding: 10px 20px; 
                                border-radius: 5px; 
                                text-decoration: none; 
                                display: inline-block;
                                font-weight: bold;
                            ">
                                Acc√©der ‚Üí
                            </a>
                        </div>
                        <div style="text-align: center; margin-top: 10px;">
                            <span style="color: #28a745; font-size: 12px;">‚óè En ligne</span>
                        </div>
                    </div>
                """, unsafe_allow_html=True)

else:
    # Vue en liste d√©taill√©e
    for app in filtered_apps:
        with st.expander(f"{app['icon']} **{app['name']}** - {app['description'][:60]}...", expanded=False):
            col1, col2 = st.columns([2, 1])
            
            with col1:
                st.markdown(f"""
                    ### {app['icon']} {app['name']}
                    
                    **Description:** {app['description']}
                    
                    **Fonctionnalit√©s principales:**
                    {chr(10).join([f"- ‚úÖ {feature}" for feature in app['features']])}
                    
                    **Cat√©gorie:** {app['category'].capitalize()}  
                    **Statut:** üü¢ En production
                """)
            
            with col2:
                st.markdown(f"""
                    <div style="text-align: center; padding: 2rem;">
                        <div style="font-size: 4rem; margin-bottom: 1rem;">{app['icon']}</div>
                        <a href="{app['url']}" target="_blank" style="
                            display: inline-block;
                            padding: 12px 24px;
                            background: {app['gradient']};
                            color: white;
                            text-decoration: none;
                            border-radius: 8px;
                            font-weight: 600;
                            transition: transform 0.3s;
                        ">
                            Acc√©der √† l'application ‚Üí
                        </a>
                    </div>
                """, unsafe_allow_html=True)

# Section informations suppl√©mentaires
st.markdown("<br><br>", unsafe_allow_html=True)

col1, col2, col3 = st.columns(3)

with col1:
    st.markdown("""
        <div class="info-card">
            <h3>üöÄ Innovation Continue</h3>
            <p>Nos solutions IA √©voluent constamment pour r√©pondre aux besoins du secteur de la construction qu√©b√©cois.</p>
            <ul>
                <li>Mises √† jour r√©guli√®res</li>
                <li>Nouvelles fonctionnalit√©s</li>
                <li>Support technique 24/7</li>
            </ul>
        </div>
    """, unsafe_allow_html=True)

with col2:
    st.markdown("""
        <div class="info-card">
            <h3>üîí S√©curit√© & Conformit√©</h3>
            <p>Toutes nos applications respectent les normes de s√©curit√© les plus strictes.</p>
            <ul>
                <li>Chiffrement SSL/TLS</li>
                <li>Conformit√© RGPD</li>
                <li>Sauvegarde automatique</li>
            </ul>
        </div>
    """, unsafe_allow_html=True)

with col3:
    st.markdown("""
        <div class="info-card">
            <h3>ü§ù Support & Formation</h3>
            <p>Une √©quipe d√©di√©e pour vous accompagner dans votre transformation num√©rique.</p>
            <ul>
                <li>Formation personnalis√©e</li>
                <li>Documentation compl√®te</li>
                <li>Assistance prioritaire</li>
            </ul>
        </div>
    """, unsafe_allow_html=True)

# SECTION ASSISTANT IA DANS LE FOOTER
st.markdown("""
    <div class="footer-chat-container">
        <div class="chat-header">
            <div class="chat-title">
                üí¨ Chat avec Sylvain Leduc - Cr√©ateur de Constructo AI
            </div>
            <div class="chat-status">
                <span class="status-dot"></span>
                En ligne - Disponible 24/7
            </div>
        </div>
        <p style="color: #6B7280; margin-bottom: 20px;">
            Bonjour! Je suis Sylvain Leduc, cr√©ateur de Constructo AI. Comment puis-je vous aider avec nos 8 applications?
        </p>
    </div>
""", unsafe_allow_html=True)

# Container pour le chat
with st.container():
    # Colonnes pour le chat
    col_chat, col_actions = st.columns([2, 1])
    
    with col_chat:
        # Zone des messages
        st.markdown("#### üí¨ Conversation")
        
        # Afficher le message d'accueil si c'est la premi√®re fois
        if not st.session_state.chat_messages:
            greeting = st.session_state.assistant.get_greeting()
            st.session_state.chat_messages.append({"role": "assistant", "content": greeting})
        
        # Container pour les messages avec scroll
        messages_container = st.container(height=300)
        with messages_container:
            for message in st.session_state.chat_messages:
                if message["role"] == "user":
                    st.markdown(f"""
                        <div class="user-message">
                            <strong style="color: #3B82F6;">Vous:</strong><br>
                            {message["content"]}
                        </div>
                    """, unsafe_allow_html=True)
                else:
                    st.markdown(f"""
                        <div class="assistant-message">
                            <strong style="color: #10B981;">Sylvain Leduc:</strong><br>
                            {message["content"]}
                        </div>
                    """, unsafe_allow_html=True)
        
        # Zone de saisie
        user_input = st.text_input(
            "Tapez votre message...",
            placeholder="Ex: Qu'est-ce que EXPERTS AI?",
            key="user_chat_input"
        )
        
        col_send, col_clear = st.columns([1, 1])
        with col_send:
            if st.button("üì§ Envoyer", type="primary", use_container_width=True):
                if user_input and user_input.strip():
                    # Ajouter le message utilisateur
                    st.session_state.chat_messages.append({"role": "user", "content": user_input})
                    
                    # Obtenir la r√©ponse
                    response = st.session_state.assistant.get_response(user_input)
                    st.session_state.chat_messages.append({"role": "assistant", "content": response})
                    
                    # Rafra√Æchir la page
                    st.rerun()
        
        with col_clear:
            if st.button("üîÑ Nouvelle conversation", use_container_width=True):
                st.session_state.chat_messages = []
                st.session_state.assistant = AssistantIA()
                st.rerun()
    
    with col_actions:
        st.markdown("#### ‚ö° Questions rapides")
        
        # Questions sugg√©r√©es adapt√©es au profil Sylvain Leduc
        quick_questions = [
            "Qu'est-ce que EXPERTS AI avec 54 experts?",
            "Comment TAKEOFF mesure sur PDF?",
            "Quel est le ROI moyen?",
            "D√©monstration personnalis√©e",
            "Parlez-moi de vous Sylvain"
        ]
        
        for question in quick_questions:
            if st.button(f"üí° {question}", key=f"quick_{question}", use_container_width=True):
                # Ajouter la question et obtenir la r√©ponse
                st.session_state.chat_messages.append({"role": "user", "content": question})
                response = st.session_state.assistant.get_response(question)
                st.session_state.chat_messages.append({"role": "assistant", "content": response})
                st.rerun()
        
        st.markdown("---")
        st.markdown("#### üìû Contact direct")
        st.info("""
            **T√©l√©phone:** 514-820-1972  
            **Email:** info@constructoai.ca  
            **Horaires:** 24/7
        """)

# Footer final
st.markdown("""
    <div style="background: white; border-top: 2px solid #e5e7eb; margin-top: 60px; padding: 40px 20px 20px 20px;">
        <div style="max-width: 1200px; margin: 0 auto; display: flex; flex-wrap: wrap; justify-content: space-between; gap: 40px;">
            <div style="flex: 1; min-width: 200px;">
                <h4 style="color: #1a1a1a; font-size: 18px; margin-bottom: 15px;">√Ä propos</h4>
                <p style="color: #666; font-size: 14px; line-height: 1.6;">Leader en solutions IA pour la construction au Qu√©bec</p>
            </div>
            <div style="flex: 1; min-width: 200px;">
                <h4 style="color: #1a1a1a; font-size: 18px; margin-bottom: 15px;">Contact</h4>
                <p style="color: #666; font-size: 14px; line-height: 1.8;">
                    üìß info@constructoai.ca<br>
                    üìû 514-820-1972<br>
                    üìç Farnham, Qu√©bec
                </p>
            </div>
            <div style="flex: 1; min-width: 200px;">
                <h4 style="color: #1a1a1a; font-size: 18px; margin-bottom: 15px;">Ressources</h4>
                <p style="color: #666; font-size: 14px; line-height: 1.8;">
                    <a href="#" style="color: #007bff; text-decoration: none;">Documentation</a><br>
                    <a href="#" style="color: #007bff; text-decoration: none;">Support</a><br>
                    <a href="#" style="color: #007bff; text-decoration: none;">API</a>
                </p>
            </div>
            <div style="flex: 1; min-width: 200px;">
                <h4 style="color: #1a1a1a; font-size: 18px; margin-bottom: 15px;">Suivez-nous</h4>
                <p style="color: #666; font-size: 14px; line-height: 1.6;">LinkedIn | Twitter | YouTube</p>
            </div>
        </div>
        <div style="text-align: center; margin-top: 30px; padding-top: 20px; border-top: 1px solid #e5e7eb;">
            <p style="color: #666; font-size: 14px;">¬© 2025 Constructo AI - Tous droits r√©serv√©s | D√©velopp√© par Sylvain Leduc</p>
        </div>
    </div>
""", unsafe_allow_html=True)

# Animation de chargement initial
placeholder = st.empty()
with placeholder.container():
    st.markdown("""
        <div class="loading-animation">
            <div class="loading-spinner"></div>
            <p>Chargement du portail...</p>
        </div>
    """, unsafe_allow_html=True)
    time.sleep(0.5)
placeholder.empty()